buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    signingConfigs {
        release {
            keyAlias 'mangaviewer'
            keyPassword 'mangaviewer'
            storeFile file(jks_path)
            storePassword 'mangaviewer'

        }
    }
    compileSdkVersion sdk_version
    buildToolsVersion build_tools_version
    defaultConfig {
        applicationId 'com.king.mangaviewer'
        minSdkVersion minSdkVersionNum
        targetSdkVersion targetSdkVersionNum
        versionCode buildVersionCode()
        versionName VERSION_NAME as String

    }
    buildTypes {
        applicationVariants.all { variant ->
            appendVersionNameVersionCode(variant, defaultConfig)
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            lintOptions {
                disable 'MissingTranslation'
            }
        }
        debug {
            versionNameSuffix = "-debug"
            applicationIdSuffix = ".debug"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:appcompat-v7:$supportPackageVersion"
    compile "com.android.support:cardview-v7:$supportPackageVersion"
    compile "com.android.support:preference-v14:$supportPackageVersion"
    compile "com.android.support:support-v4:$supportPackageVersion"
    compile "com.android.support:design:$supportPackageVersion"
    compile "com.google.android.gms:play-services-ads:$googleServiceVersion"

    compile "org.jsoup:jsoup:1.8.2"
    compile "com.google.code.gson:gson:2.7"
    compile "me.grantland:autofittextview:0.2.1"
    compile "joda-time:joda-time:2.8.2"
    compile "com.squareup.okhttp3:okhttp:3.3.1"
    compile 'com.github.bumptech.glide:glide:3.7.0'

    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'

    // Required -- JUnit 4 framework
    testCompile "junit:junit:4.12"
    // Optional -- Mockito framework
    testCompile "org.mockito:mockito-core:2.2.9"


    androidTestCompile "com.android.support.test:runner:0.4"
    // Set this dependency to use JUnit 4 rules
    androidTestCompile "com.android.support.test:rules:0.4"
    // Set this dependency to build and run Espresso tests
    androidTestCompile "com.android.support.test.espresso:espresso-core:2.2.2"
    androidTestCompile "com.android.support:support-annotations:$supportPackageVersion"
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:answers:1.3.13@aar') {
        transitive = true;
    }
}

def appendVersionNameVersionCode(variant, defaultConfig) {
    variant.outputs.each { output ->
        if (variant.name == "debug") {
            return
        }
        def file = output.packageApplication.outputFile
        def fileName = file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk")
        print(fileName + "\n")
        output.packageApplication.outputFile = new File(file.parent, fileName)
    }
}
